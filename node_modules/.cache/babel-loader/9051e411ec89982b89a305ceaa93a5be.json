{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\ToDo.js\",\n    _s = $RefreshSig$();\n\n/*  ToDO.js  */\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction ToDo(props) {\n  _s();\n\n  const [currentItem, setCurrentItem] = useState('');\n  const [List, setList] = useState([]);\n\n  const addTheItem = async () => {\n    setList(oldArray => [...oldArray, currentItem]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => {\n            setCurrentItem(event.currentTarget.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTheItem,\n          children: \" Add the Item \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 67\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 73\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), JSON.stringify(List), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px dotted black'\n        },\n        children: List.map((listElement, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  border: '1px dotted green',\n                  padding: '4px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"  \", listElement, \"  \"]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDo, \"ferzxAKCoFRRhyUZSDzWAIsoKTQ=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/ToDo.js"],"names":["React","useState","useEffect","Container","Row","Col","ToDo","props","currentItem","setCurrentItem","List","setList","addTheItem","oldArray","event","currentTarget","value","JSON","stringify","border","map","listElement","idx","padding"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,UAAU,GAAG,YAAY;AAE3BD,IAAAA,OAAO,CAACE,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcL,WAAd,CAAb,CAAP;AAED,GAJH;;AAMA,sBAEI;AAAA,2BACA,QAAC,SAAD;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAES;AAAA;AAAA;AAAA;AAAA,cAFT,eAKE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAKM,KAAD,IAA0C;AACzEL,YAAAA,cAAc,CAACK,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAd;AAA2C;AAD3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAQ,UAAA,OAAO,EAAEJ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,qBAKwD;AAAA;AAAA;AAAA;AAAA,gBALxD,oBAK8D;AAAA;AAAA;AAAA;AAAA,gBAL9D;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAaKK,IAAI,CAACC,SAAL,CAAeR,IAAf,CAbL,qBAa4B;AAAA;AAAA;AAAA;AAAA,cAb5B,qBAamC;AAAA;AAAA;AAAA;AAAA,cAbnC,eAkBM;AAAK,QAAA,KAAK,EAAE;AAAES,UAAAA,MAAM,EAAC;AAAT,SAAZ;AAAA,kBAGIT,IAAI,CAACU,GAAL,CAAS,CAACC,WAAD,EAAcC,GAAd,KAA8B;AACvC,8BAGF;AAAA,mCACA,QAAC,GAAD;AAAA,sCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,GAAD;AAAK,gBAAA,KAAK,EAAE;AAACH,kBAAAA,MAAM,EAAC,kBAAR;AAA4BI,kBAAAA,OAAO,EAAC;AAApC,iBAAZ;AAAA,uCAEE;AAAA,mCAAiBF,WAAjB;AAAA,mBAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAOI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAHE;AAkBC,SAnBD;AAHJ;AAAA;AAAA;AAAA;AAAA,cAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmDD;;GA9DMhB,I;;KAAAA,I;AAgEP,eAAeA,IAAf","sourcesContent":["/*  ToDO.js  */ \r\nimport React from 'react';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction ToDo(props) {\r\n\r\n    const [currentItem, setCurrentItem] = useState('') \r\n    const [List, setList] = useState([])  \r\n\r\n    const addTheItem = async () => {   \r\n        \r\n        setList(oldArray => [...oldArray, currentItem  ] )\r\n      \r\n      }\r\n    \r\n    return (\r\n        \r\n        <div>\r\n        <Container>\r\n        \r\n            <br/><br/>\r\n\r\n          {/* INPUT BOX, BUTTON */}\r\n          <div>   \r\n            <input type='text' onChange ={ (event: ChangeEvent<HTMLInputElement>) => {\r\n            setCurrentItem(event.currentTarget.value) }\r\n            } />\r\n                    \r\n            <button onClick={addTheItem}> Add the Item </button>  <br/> <br/>\r\n          </div> \r\n            \r\n            {JSON.stringify(List)}  <br/>  <br/>\r\n\r\n            \r\n            {/*   OUTPUT List  */}\r\n              \r\n              <div style={{ border:'1px dotted black'}}>  \r\n              \r\n              \r\n                { List.map((listElement, idx: number) => {\r\n                  return (\r\n                    \r\n                  \r\n                <div>\r\n                <Row>\r\n                    <Col> </Col>\r\n                    <Col style={{border:'1px dotted green', padding:'4px'}} > \r\n                    \r\n                      <li key={idx}>  {listElement}  </li>\r\n                    \r\n                    </Col>\r\n                    <Col> </Col>\r\n                </Row>    \r\n                </div>\r\n                               \r\n                  \r\n                  \r\n                  )\r\n                  })\r\n                }\r\n              </div>\r\n        \r\n        </Container>\r\n        </div>\r\n    \r\n    )\r\n  }\r\n  \r\n  export default ToDo;\r\n"]},"metadata":{},"sourceType":"module"}