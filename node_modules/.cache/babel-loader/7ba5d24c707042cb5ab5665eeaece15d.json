{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\SelectComplete.js\";\n\n/*  \r\n    SelectComplete.js  \r\n    called from class ToDoMain\r\n\r\n/*  \r\n   { item.toggleComplete===true && item.item }\r\n   MUST be in this order: \r\n   Expression TRUE &&  Item   gives  Item   (Javascript) \r\n*/\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction SelectComplete(props) {\n  console.log(\"call SelectComplete\");\n\n  if (props.setting === 'complete') {\n    const proplist = props.todoArr;\n    const listItems = proplist.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", item.toggleComplete === true && item.item, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Complete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", listItems, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_c = SelectComplete;\n;\nexport default SelectComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectComplete\");","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/SelectComplete.js"],"names":["React","Container","Row","Col","SelectComplete","props","console","log","setting","proplist","todoArr","listItems","map","item","toggleComplete"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAEA,MAAIF,KAAK,CAACG,OAAN,KAAgB,UAApB,EAAgC;AAC5B,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,OAAvB;AACA,UAAMC,SAAS,GAAGF,QAAQ,CAACG,GAAT,CAAeC,IAAD,iBAChC;AAAA,sBAAQA,IAAI,CAACC,cAAL,KAAsB,IAAtB,IAA8BD,IAAI,CAACA,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB,CAAlB;AAGA,wBACI;AAAA,8BACI;AAAA,qCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,wBAAOF,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAXD,MAYK;AAAE,WACQ,IADR;AAEN;AACJ;;KAlBQP,c;AAkBR;AACD,eAAeA,cAAf","sourcesContent":["/*  \r\n    SelectComplete.js  \r\n    called from class ToDoMain\r\n\r\n/*  \r\n   { item.toggleComplete===true && item.item }\r\n   MUST be in this order: \r\n   Expression TRUE &&  Item   gives  Item   (Javascript) \r\n*/    \r\n\r\nimport React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nfunction SelectComplete(props) {\r\n    console.log(\"call SelectComplete\");\r\n    \r\n    if (props.setting==='complete') {\r\n        const proplist = props.todoArr;\r\n        const listItems = proplist.map( (item) =>\r\n        <div> { item.toggleComplete===true && item.item } </div>\r\n        )\r\n        return(\r\n            <div>    \r\n                <p> <b> Complete </b> </p>    \r\n                <div> {listItems} </div>\r\n            </div>\r\n        );\r\n    }\r\n    else { return (\r\n                   null )\r\n    }\r\n};\r\nexport default SelectComplete;\r\n   \r\n    \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}