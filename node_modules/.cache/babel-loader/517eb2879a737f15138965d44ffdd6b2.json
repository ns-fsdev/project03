{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\Test2.js\";\n\n/*  TEST2.js\r\n\r\n    this is a class comp, updating state with button click.\r\n    code from modules 2 and 3\r\n\r\n    To setState Mod 2/video 2-2-2017-06-13-77241-dev281x_2017 1080 Encoding Preset.mp4\r\n    state >  setSate with callb func.\r\n\r\n*/\nimport React from 'react';\nimport { render } from '@testing-library/react';\n/* React-Bootstrap Lib */\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n/* React-Icons  Lib  */\n\nimport { BsTrash, BsTrashFill, BsTrash2, BsTrash2Fill } from 'react-icons/bs';\n\nclass Test2 extends React.Component {\n  constructor(props) {\n    super(props);\n    /*   State and event Bind   */\n\n    this.state = {\n      item: '',\n      toggleComplete: 'false',\n      ListArr: []\n    };\n    this.handleItemChange = this.handleItemChange.bind(this);\n    this.AddItem = this.AddItem.bind(this);\n    this.DeleteItem = this.DeleteItem.bind(this);\n    this.ToggleComplete = this.ToggleComplete.bind(this);\n  }\n  /* OnClick ADD to do item to  ListArr  */\n\n\n  AddItem(event) {\n    event.preventDefault();\n    /*  create todo object from input  */\n\n    const todoObj = {\n      item: this.state.item,\n      active: this.state.active\n    };\n    console.log(\"call func AddItem\");\n    console.log(todoObj);\n    /*   copy array from state, push todo obj to ArrayCopy  */\n\n    let ArrayCopy = [];\n    ArrayCopy = Array.from(this.state.ListArr);\n    ArrayCopy.push(todoObj);\n    /*  Update state Array   */\n\n    this.setState({\n      ListArr: ArrayCopy\n    }, () => {\n      console.log(\"state Arr after setState\");\n      console.log(this.state.ListArr);\n    });\n  }\n  /* Input field UPDATE state  - this is a callback function */\n\n\n  handleItemChange(event) {\n    this.setState({\n      item: event.target.value\n    }, () => {\n      console.log(this.state.item);\n    });\n  }\n\n  handleToggle(event) {\n    this.setState({\n      item: event.target.value\n    }, () => {\n      console.log(this.state.item);\n    });\n  } // Onclick DELETE to do item\n\n\n  DeleteItem(index) {\n    /*  event.preventDefault()    */\n\n    /*  console.log(\"call DeleteItem func\")\r\n    console.log(\"props is\")\r\n    console.log(index)       */\n\n    /*   copy array from state  */\n    let getArray = [];\n    getArray = Array.from(this.state.ListArr);\n    console.log(\"this is getArray\");\n    console.log(getArray);\n    /*  delete item at index   */\n\n    getArray.splice(index, 1);\n    /*   update state   */\n\n    this.setState({\n      ListArr: getArray\n    });\n  }\n\n  ToggleComplete(index) {\n    console.log(\"call toggleComplete\");\n    /* Toggle state toggleOn value */\n\n    /* copy state array, change 'active' value \r\n    let ArrayCopy=[]\r\n    ArrayCopy = Array.from(this.state.ListArr)\r\n    ArrayCopy[index] = this.state.active = 'false'\r\n      /* update state array\r\n    this.setState( {ListArr: ArrayCopy} )\r\n    console.log(this.state.ListArr)   \r\n    */\n  }\n  /*   ****          RENDER            ****   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" This is Test2 func, from Test2.js \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" react is \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 16\n          }, this), \" junk \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.item,\n            onChange: this.handleItemChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.AddItem,\n            children: \" Add Item \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 5\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 12\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.ListArr.map((element, index) => {\n            /* let ItemId={index}; \r\n            console.log(\"this is ItemId\");\r\n            console.log( {ItemId} );         */\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  style: {\n                    border: '1px dotted red',\n                    padding: '4px'\n                  },\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  style: {\n                    border: '1px dotted green',\n                    padding: '4px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"  \", element.item, \"  \"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  style: {\n                    border: '1px dotted darkorange',\n                    padding: '4px'\n                  },\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 1,\n                  style: {\n                    border: '1px dotted green',\n                    padding: '4px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: this.state.toggleComplete,\n                    onClick: () => this.handleToggle(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 1,\n                  style: {\n                    border: '1px dotted red',\n                    padding: '4px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.DeleteItem(index),\n                    children: \" del   \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 16\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default Test2;","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/Test2.js"],"names":["React","render","Container","Row","Col","Button","BsTrash","BsTrashFill","BsTrash2","BsTrash2Fill","Test2","Component","constructor","props","state","item","toggleComplete","ListArr","handleItemChange","bind","AddItem","DeleteItem","ToggleComplete","event","preventDefault","todoObj","active","console","log","ArrayCopy","Array","from","push","setState","target","value","handleToggle","index","getArray","splice","map","element","border","padding"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AAGA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA;;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,QAA/B,EAAyCC,YAAzC,QAA6D,gBAA7D;;AAIA,MAAMC,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAC,EAAN;AAAUC,MAAAA,cAAc,EAAC,OAAzB;AAAkCC,MAAAA,OAAO,EAAE;AAA3C,KAAb;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACH;AAEC;;;AACAC,EAAAA,OAAO,CAACG,KAAD,EAAQ;AACbA,IAAAA,KAAK,CAACC,cAAN;AAEA;;AACA,UAAMC,OAAO,GAAE;AAACV,MAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC,IAAjB;AAAuBW,MAAAA,MAAM,EAAC,KAAKZ,KAAL,CAAWY;AAAzC,KAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA;;AACA,QAAII,SAAS,GAAC,EAAd;AACAA,IAAAA,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAKjB,KAAL,CAAWG,OAAtB,CAAZ;AACAY,IAAAA,SAAS,CAACG,IAAV,CAAeP,OAAf;AAEA;;AACA,SAAKQ,QAAL,CAAe;AAAChB,MAAAA,OAAO,EAAEY;AAAV,KAAf,EAAsC,MAAM;AAC5CF,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWG,OAAvB;AAEA,KAJA;AAKD;AAGD;;;AACAC,EAAAA,gBAAgB,CAACK,KAAD,EAAO;AACrB,SAAKU,QAAL,CAAe;AAAClB,MAAAA,IAAI,EAAEQ,KAAK,CAACW,MAAN,CAAaC;AAApB,KAAf,EAA4C,MAAM;AAElDR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,IAAvB;AACC,KAHD;AAID;;AAEDqB,EAAAA,YAAY,CAACb,KAAD,EAAO;AACjB,SAAKU,QAAL,CAAe;AAAClB,MAAAA,IAAI,EAAEQ,KAAK,CAACW,MAAN,CAAaC;AAApB,KAAf,EAA4C,MAAM;AAElDR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,IAAvB;AACC,KAHD;AAID,GAhD4B,CAmD7B;;;AACAM,EAAAA,UAAU,CAACgB,KAAD,EAAQ;AAEhB;;AACA;AACR;AACA;;AAEQ;AACA,QAAIC,QAAQ,GAAE,EAAd;AACAA,IAAAA,QAAQ,GAAGR,KAAK,CAACC,IAAN,CAAW,KAAKjB,KAAL,CAAWG,OAAtB,CAAX;AAEAU,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AAEA;;AACAA,IAAAA,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,EAAsB,CAAtB;AAED;;AACA,SAAKJ,QAAL,CAAe;AAAChB,MAAAA,OAAO,EAAEqB;AAAV,KAAf;AAEA;;AAGHhB,EAAAA,cAAc,CAACe,KAAD,EAAQ;AACtBV,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA;;AAGI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;AAQD;;;AACE3B,EAAAA,MAAM,GAAE;AACN,wBACN;AAAA,6BACE,QAAC,SAAD;AAAA,gCACF;AAAA;AAAA;AAAA;AAAA,gBADE,eAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFE,eAGF;AAAA,gDAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHE,eAMA;AAAA,iCACI;AAAO,YAAA,IAAI,EAAE,MAAb;AACM,YAAA,KAAK,EAAG,KAAKa,KAAL,CAAWC,IADzB;AAEM,YAAA,QAAQ,EAAG,KAAKG;AAFtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANA,eAYA;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAZA,oBAcO;AAAA;AAAA;AAAA;AAAA,gBAdP,oBAca;AAAA;AAAA;AAAA;AAAA,gBAdb,eAkBA;AAAA,oBAEG,KAAKN,KAAL,CAAWG,OAAX,CAAmBuB,GAAnB,CAAwB,CAACC,OAAD,EAAUJ,KAAV,KAAoB;AACxC;AACX;AACA;AACQ,gCACA;AAAA,qCACE,QAAC,GAAD;AAAA,wCACA,QAAC,GAAD;AAAK,kBAAA,KAAK,EAAE;AAACK,oBAAAA,MAAM,EAAC,gBAAR;AAA0BC,oBAAAA,OAAO,EAAC;AAAlC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAGA,QAAC,GAAD;AAAK,kBAAA,KAAK,EAAE;AAACD,oBAAAA,MAAM,EAAC,kBAAR;AAA4BC,oBAAAA,OAAO,EAAC;AAApC,mBAAZ;AAAA,yCAEK;AAAA,qCAAmBF,OAAO,CAAC1B,IAA3B;AAAA,qBAASsB,KAAT;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,wBAHA,eAQA,QAAC,GAAD;AAAK,kBAAA,KAAK,EAAE;AAACK,oBAAAA,MAAM,EAAC,uBAAR;AAAiCC,oBAAAA,OAAO,EAAC;AAAzC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARA,eAUA,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,CAAT;AAAY,kBAAA,KAAK,EAAE;AAACD,oBAAAA,MAAM,EAAC,kBAAR;AAA4BC,oBAAAA,OAAO,EAAC;AAApC,mBAAnB;AAAA,yCACA;AAAO,oBAAA,IAAI,EAAC,UAAZ;AACO,oBAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWE,cAD3B;AAEO,oBAAA,OAAO,EAAG,MAAK,KAAKoB,YAAL,CAAkBC,KAAlB;AAFtB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,wBAVA,eAgBA,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,CAAT;AAAY,kBAAA,KAAK,EAAE;AAACK,oBAAAA,MAAM,EAAC,gBAAR;AAA0BC,oBAAAA,OAAO,EAAC;AAAlC,mBAAnB;AAAA,yCACA;AAAQ,oBAAA,OAAO,EAAG,MAAK,KAAKtB,UAAL,CAAgBgB,KAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,wBAhBA,eAoBA;AAAA;AAAA;AAAA;AAAA,wBApBA,eAoBK;AAAA;AAAA;AAAA;AAAA,wBApBL,eAoBU;AAAA;AAAA;AAAA;AAAA,wBApBV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADA;AA0BH,WA9BE;AAFH;AAAA;AAAA;AAAA;AAAA,gBAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM;AA4DH;;AA/J8B;;AAiKnC,eAAe3B,KAAf","sourcesContent":["/*  TEST2.js\r\n\r\n    this is a class comp, updating state with button click.\r\n    code from modules 2 and 3\r\n\r\n    To setState Mod 2/video 2-2-2017-06-13-77241-dev281x_2017 1080 Encoding Preset.mp4\r\n    state >  setSate with callb func.\r\n\r\n*/\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\n/* React-Bootstrap Lib */\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n/* React-Icons  Lib  */\r\nimport { BsTrash, BsTrashFill, BsTrash2, BsTrash2Fill } from 'react-icons/bs';\r\n\r\n\r\n\r\nclass Test2 extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        /*   State and event Bind   */\r\n        this.state = {item:'', toggleComplete:'false', ListArr: [] }\r\n        this.handleItemChange = this.handleItemChange.bind(this)\r\n        this.AddItem = this.AddItem.bind(this)\r\n        this.DeleteItem = this.DeleteItem.bind(this)\r\n        this.ToggleComplete = this.ToggleComplete.bind(this)\r\n    }   \r\n    \r\n      /* OnClick ADD to do item to  ListArr  */  \r\n      AddItem(event) {\r\n        event.preventDefault()\r\n        \r\n        /*  create todo object from input  */\r\n        const todoObj= {item:this.state.item, active:this.state.active}\r\n        console.log(\"call func AddItem\")\r\n        console.log(todoObj)\r\n\r\n        /*   copy array from state, push todo obj to ArrayCopy  */\r\n        let ArrayCopy=[]\r\n        ArrayCopy = Array.from(this.state.ListArr)\r\n        ArrayCopy.push(todoObj)\r\n        \r\n        /*  Update state Array   */\r\n        this.setState( {ListArr: ArrayCopy} , () => {\r\n        console.log(\"state Arr after setState\")\r\n        console.log(this.state.ListArr);\r\n\r\n       })\r\n      }\r\n\r\n\r\n      /* Input field UPDATE state  - this is a callback function */\r\n      handleItemChange(event){\r\n        this.setState( {item: event.target.value} , () => {\r\n\r\n        console.log(this.state.item)\r\n        })\r\n      } \r\n\r\n      handleToggle(event){\r\n        this.setState( {item: event.target.value} , () => {\r\n\r\n        console.log(this.state.item)\r\n        })\r\n      } \r\n      \r\n\r\n      // Onclick DELETE to do item\r\n      DeleteItem(index) {\r\n        \r\n        /*  event.preventDefault()    */\r\n        /*  console.log(\"call DeleteItem func\")\r\n        console.log(\"props is\")\r\n        console.log(index)       */\r\n\r\n        /*   copy array from state  */\r\n        let getArray =[];\r\n        getArray = Array.from(this.state.ListArr)\r\n\r\n        console.log(\"this is getArray\")\r\n        console.log(getArray)\r\n\r\n        /*  delete item at index   */\r\n        getArray.splice(index,1)\r\n        \r\n       /*   update state   */\r\n       this.setState( {ListArr: getArray} )\r\n\r\n      }\r\n      \r\n      \r\n    ToggleComplete(index) {\r\n    console.log(\"call toggleComplete\")\r\n    /* Toggle state toggleOn value */\r\n    \r\n      \r\n        /* copy state array, change 'active' value \r\n        let ArrayCopy=[]\r\n        ArrayCopy = Array.from(this.state.ListArr)\r\n        ArrayCopy[index] = this.state.active = 'false'\r\n\r\n        /* update state array\r\n        this.setState( {ListArr: ArrayCopy} )\r\n        console.log(this.state.ListArr)   \r\n        */\r\n    }\r\n\r\n\r\n\r\n    \r\n    \r\n    \r\n    \r\n    /*   ****          RENDER            ****   */\r\n      render(){\r\n        return (\r\n\t\t<div> \r\n    <Container>\r\n\t\t<br/>\r\n\t\t<p> This is Test2 func, from Test2.js </p>\r\n\t\t<p> react is <b>complete</b> junk </p>\r\n    \r\n    {/* DISPLAY  Input field / Button  */}\r\n    <div>\r\n        <input type= 'text'\r\n              value= {this.state.item}\r\n              onChange= {this.handleItemChange}  />\r\n    </div>        \r\n\r\n    <div>             \r\n        <button onClick={this.AddItem}> Add Item </button> \r\n    </div> <br/> <br/>\r\n\r\n\r\n    {/*  DISPLAY  ToDo List  */}\r\n    <div> \r\n     \r\n     { this.state.ListArr.map( (element, index) => {\r\n           /* let ItemId={index}; \r\n           console.log(\"this is ItemId\");\r\n           console.log( {ItemId} );         */\r\n        return (\r\n        <div>\r\n          <Row>\r\n          <Col style={{border:'1px dotted red', padding:'4px'}}> </Col>\r\n          \r\n          <Col style={{border:'1px dotted green', padding:'4px'}} > \r\n              \r\n               <li key={index}>  {element.item}  </li>\r\n          </Col>\r\n\r\n          <Col style={{border:'1px dotted darkorange', padding:'4px'}}> </Col>\r\n\r\n          <Col xs={1} style={{border:'1px dotted green', padding:'4px'}}> \r\n          <input type='checkbox' \r\n                 checked={this.state.toggleComplete}\r\n                 onClick={ ()=> this.handleToggle(index) } />\r\n          </Col>\r\n\r\n          <Col xs={1} style={{border:'1px dotted red', padding:'4px'}}> \r\n          <button onClick={ ()=> this.DeleteItem(index) } > del   </button>\r\n           </Col>\r\n\r\n          <br/><br/><br/>\r\n          </Row>\r\n        </div>\r\n        )\r\n    } ) \r\n    }\r\n    </div>\r\n    \r\n\r\n\t\t</Container>\r\n\t\t</div>\r\n\t\t)\r\n    }\r\n}\r\nexport default Test2;\r\n"]},"metadata":{},"sourceType":"module"}