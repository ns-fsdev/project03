{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\ToDo.js\",\n    _s = $RefreshSig$();\n\n/*  ToDo.js  */\nimport React from 'react';\nimport { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n/* import Button from 'react-bootstrap/Button'  */\n\nfunction ToDo(props) {\n  _s();\n\n  {\n    /*  STATE VARS  */\n  }\n  const [InputItem, setInputItem] = useState({\n    item: '',\n    active: 'true'\n  });\n  const [List, setList] = useState([]);\n  {\n    /* FUNC  -  ADD input to setList/List array */\n  }\n\n  const addTheItem = async () => {\n    {\n      /* setList(oldArray => [...oldArray, InputItem] )  */\n    }\n    setList(oldArray => [...oldArray, InputItem]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n          /* value={InputItem.item} */\n          ,\n          onChange: e => setInputItem({ ...InputItem,\n            item: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTheItem,\n          children: \" Add the Item \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 67\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 73\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), JSON.stringify(List), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 44\n      }, this), List.map((listElement, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                border: '1px dotted red',\n                padding: '4px'\n              },\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                border: '1px dotted green',\n                padding: '4px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"  \", listElement, \" \"]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                border: '1px dotted red',\n                padding: '4px'\n              },\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"  \", /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDo, \"Pljx6U3SldkpzbPhF8S6ijyL7Nw=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/ToDo.js"],"names":["React","useState","Container","Row","Col","ToDo","props","InputItem","setInputItem","item","active","List","setList","addTheItem","oldArray","e","target","value","JSON","stringify","map","listElement","idx","border","padding"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA;;AAKA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB;AAAC;AAAmB;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAE;AAACQ,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,MAAM,EAAC;AAAjB,GAAF,CAA1C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAGA;AAAC;AAA+C;;AAChD,QAAMY,UAAU,GAAG,YAAY;AAE3B;AAAC;AAAsD;AACvDD,IAAAA,OAAO,CAACE,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcP,SAAd,CAAb,CAAP;AACH,GAJD;;AAMA,sBAEI;AAAA,4BACA,QAAC,SAAD;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAES;AAAA;AAAA;AAAA;AAAA,cAFT,eAKE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC;AACL;AADP;AAEO,UAAA,QAAQ,EAAIQ,CAAC,IAAGP,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeE,YAAAA,IAAI,EAACM,CAAC,CAACC,MAAF,CAASC;AAA7B,WAAD;AAFnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,UAAA,OAAO,EAAEJ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,qBAMwD;AAAA;AAAA;AAAA;AAAA,gBANxD,oBAM8D;AAAA;AAAA;AAAA;AAAA,gBAN9D;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAcKK,IAAI,CAACC,SAAL,CAAeR,IAAf,CAdL,qBAc4B;AAAA;AAAA;AAAA;AAAA,cAd5B,qBAcmC;AAAA;AAAA;AAAA;AAAA,cAdnC,EAkBMA,IAAI,CAACS,GAAL,CAAU,CAACC,WAAD,EAAcC,GAAd,KAA8B;AACpC,4BACA;AAAA,iCACA,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAE;AAACC,gBAAAA,MAAM,EAAC,gBAAR;AAA0BC,gBAAAA,OAAO,EAAC;AAAlC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAE;AAACD,gBAAAA,MAAM,EAAC,kBAAR;AAA4BC,gBAAAA,OAAO,EAAC;AAApC,eAAZ;AAAA,qCACA;AAAA,iCAAiBH,WAAjB;AAAA,iBAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAOE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAE;AAACC,gBAAAA,MAAM,EAAC,gBAAR;AAA0BC,gBAAAA,OAAO,EAAC;AAAlC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADA;AAaC,OAdL,CAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAoCQ;AAAA,oCAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YApCR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA2CD;;GAxDMnB,I;;KAAAA,I;AA0DP,eAAeA,IAAf","sourcesContent":["/*  ToDo.js  */ \r\nimport React from 'react';\r\nimport {useState} from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n/* import Button from 'react-bootstrap/Button'  */\r\n\r\n\r\n\r\n\r\nfunction ToDo(props) {\r\n    {/*  STATE VARS  */}\r\n    const [InputItem, setInputItem] = useState( {item:'', active:'true'} ) \r\n    const [List, setList] = useState([])  \r\n\r\n    \r\n    {/* FUNC  -  ADD input to setList/List array */}\r\n    const addTheItem = async () => { \r\n         \r\n        {/* setList(oldArray => [...oldArray, InputItem] )  */}\r\n        setList(oldArray => [...oldArray, InputItem] )\r\n    }     \r\n    \r\n    return (\r\n        \r\n        <div>\r\n        <Container>\r\n        \r\n            <br/><br/>\r\n\r\n          {/* INPUT BOX, BUTTON */}\r\n          <div>   \r\n            <input type='text' \r\n                   /* value={InputItem.item} */\r\n                   onChange= { e=> setInputItem({...InputItem, item:e.target.value}) }\r\n            />\r\n                    \r\n            <button onClick={addTheItem}> Add the Item </button>  <br/> <br/>\r\n          </div> \r\n            \r\n            {JSON.stringify(List)}  <br/>  <br/>\r\n\r\n            \r\n            {/*   OUTPUT List  */}\r\n            { List.map( (listElement, idx: number) => {\r\n                  return (\r\n                  <div>\r\n                  <Row>\r\n                    <Col style={{border:'1px dotted red', padding:'4px'}}> </Col>\r\n                    \r\n                    <Col style={{border:'1px dotted green', padding:'4px'}} > \r\n                    <li key={idx}>  {listElement} </li>\r\n                    </Col>\r\n                    \r\n                    <Col style={{border:'1px dotted red', padding:'4px'}}> </Col>\r\n                  </Row>   \r\n                  </div>\r\n                  )\r\n                  })\r\n                }\r\n        </Container>\r\n                <div>  <Counter /> </div>\r\n    \r\n        </div>\r\n    \r\n    )\r\n  }\r\n  \r\n  export default ToDo;\r\n"]},"metadata":{},"sourceType":"module"}