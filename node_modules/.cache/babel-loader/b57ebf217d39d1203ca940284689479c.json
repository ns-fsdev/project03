{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\SelectAll.js\";\n\n/*  SelectAll.js  was TestFunc.js  */\n\n/*  this is now working for 'all' \r\n    Sun 2-14-21 9:05p           */\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction SelectAll(props) {\n  console.log(\"call SelectAll\");\n\n  if (props.setting === 'all') {\n    const proplist = props.todoArr;\n    const listItems = proplist.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", item.item, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \" All: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), listItems]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_c = SelectAll;\n;\nexport default SelectAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectAll\");","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/SelectAll.js"],"names":["React","Container","Row","Col","SelectAll","props","console","log","setting","proplist","todoArr","listItems","map","item"],"mappings":";;;AAAA;;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAEA,MAAIF,KAAK,CAACG,OAAN,KAAgB,KAApB,EAA2B;AACvB,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,OAAvB;AACA,UAAMC,SAAS,GAAGF,QAAQ,CAACG,GAAT,CAAeC,IAAD,iBAChC;AAAA,sBAAOA,IAAI,CAACA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB,CAAlB;AAGA,wBACI;AAAA,6BACI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,GAAD;AAAA,kCACA;AAAA,yCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAECF,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAQI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAnBD,MAoBK;AAAE,WACQ,IADR;AAEN;AACJ;;KA1BQP,S;AA0BR;AACD,eAAeA,SAAf","sourcesContent":["/*  SelectAll.js  was TestFunc.js  */\r\n/*  this is now working for 'all' \r\n    Sun 2-14-21 9:05p           */\r\n\r\nimport React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction SelectAll(props) {\r\n    console.log(\"call SelectAll\");\r\n    \r\n    if (props.setting==='all') {\r\n        const proplist = props.todoArr;\r\n        const listItems = proplist.map( (item) =>\r\n        <div> {item.item} </div>\r\n        )\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <Col> </Col>\r\n                    \r\n                    <Col> \r\n                    <p> <b> All: </b> </p>   \r\n                    {listItems}\r\n                    </Col>\r\n                    \r\n                    <Col> </Col>\r\n                </Row>\r\n            </div >\r\n        );\r\n    }\r\n    else { return (\r\n                   null)\r\n    }\r\n};\r\nexport default SelectAll;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}