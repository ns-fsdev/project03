{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\SelectComplete.js\";\n\n/*  SelectComplete.js  */\n\n/*  this is now working for 'all' \r\n    Sun 2-14-21 9:05p           */\n\n/*  \r\n   { item.toggleComplete===true && item.item }\r\n   MUST be in this order: \r\n   Expression TRUE &&  Item   gives  Item   (Javascript) \r\n*/\nimport React from 'react';\n\nfunction SelectComplete(props) {\n  console.log(\"call SelectComplete\");\n\n  if (props.setting === 'complete') {\n    const proplist = props.todoArr;\n    const listItems = proplist.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", item.toggleComplete === true && item.item, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" COMPLETE \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this);\n  }\n}\n\n_c = SelectComplete;\n;\nexport default SelectComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectComplete\");","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/SelectComplete.js"],"names":["React","SelectComplete","props","console","log","setting","proplist","todoArr","listItems","map","item","toggleComplete"],"mappings":";;;AAAA;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAEA,MAAIF,KAAK,CAACG,OAAN,KAAgB,UAApB,EAAgC;AAC5B,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,OAAvB;AACA,UAAMC,SAAS,GAAGF,QAAQ,CAACG,GAAT,CAAeC,IAAD,iBAChC;AAAA,sBAAOA,IAAI,CAACC,cAAL,KAAsB,IAAtB,IAA8BD,IAAI,CAACA,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB,CAAlB;AAGA,wBACI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GARD,MASK;AAAE,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAEN;AACJ;;KAfQP,c;AAeR;AACD,eAAeA,cAAf","sourcesContent":["/*  SelectComplete.js  */\r\n/*  this is now working for 'all' \r\n    Sun 2-14-21 9:05p           */\r\n\r\n/*  \r\n   { item.toggleComplete===true && item.item }\r\n   MUST be in this order: \r\n   Expression TRUE &&  Item   gives  Item   (Javascript) \r\n*/    \r\n\r\nimport React from 'react';\r\n\r\nfunction SelectComplete(props) {\r\n    console.log(\"call SelectComplete\");\r\n    \r\n    if (props.setting==='complete') {\r\n        const proplist = props.todoArr;\r\n        const listItems = proplist.map( (item) =>\r\n        <li> { item.toggleComplete===true && item.item } </li>\r\n        )\r\n        return(\r\n            <ul>{listItems}</ul>\r\n        );\r\n    }\r\n    else { return (\r\n                   <p> COMPLETE </p> )\r\n    }\r\n};\r\nexport default SelectComplete;\r\n   \r\n    \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}