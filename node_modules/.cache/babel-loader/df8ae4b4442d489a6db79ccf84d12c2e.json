{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\Test2.js\";\n\n/*  TEST2.js\r\n\r\n    this is a class comp, updating state with button click.\r\n    code from modules 2 and 3\r\n\r\n    To setState Mod 2/video 2-2-2017-06-13-77241-dev281x_2017 1080 Encoding Preset.mp4\r\n    state >  setSate with callb func.\r\n\r\n*/\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Test2 extends React.Component {\n  constructor(props) {\n    super(props);\n    /*   State   */\n\n    this.state = {\n      item: '',\n      active: 'true',\n      ListArr: []\n    };\n    this.handleItemChange = this.handleItemChange.bind(this);\n    this.AddItem = this.AddItem.bind(this);\n  }\n  /* Add to do item to  ListArr  */\n\n\n  AddItem(event) {\n    event.preventDefault();\n    /*  create todo object from input  */\n\n    const todoObj = {\n      item: this.state.item,\n      active: this.state.active\n    };\n    console.log(\"call func AddItem\");\n    console.log(todoObj);\n    /*   copy array from state, push todo obj to copy  */\n\n    let ArrayCopy = [];\n    ArrayCopy = Array.from(this.state.ListArr);\n    ArrayCopy.push(todoObj);\n    /*  update state Array  */\n\n    this.setState({\n      ListArr: ArrayCopy\n    }, () => {\n      console.log(\"state Arr after setState\");\n      console.log(this.state.ListArr);\n    });\n  }\n  /* this is a callback function */\n\n\n  handleItemChange(event) {\n    this.setState({\n      item: event.target.value\n    }, () => {\n      console.log(this.state.item);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" This is Test2 func, from Test2.js \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" react is \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 16\n          }, this), \" junk \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.item,\n            onChange: this.handleItemChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.AddItem,\n            children: \" Add Item \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 5\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 63\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 69\n        }, this), List.map((listElement, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  border: '1px dotted red',\n                  padding: '4px'\n                },\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  border: '1px dotted green',\n                  padding: '4px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"  \", listElement, \" \"]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  border: '1px dotted red',\n                  padding: '4px'\n                },\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default Test2;","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/Test2.js"],"names":["React","Container","Row","Col","Button","Test2","Component","constructor","props","state","item","active","ListArr","handleItemChange","bind","AddItem","event","preventDefault","todoObj","console","log","ArrayCopy","Array","from","push","setState","target","value","render","List","map","listElement","idx","border","padding"],"mappings":"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","sourcesContent":["/*  TEST2.js\r\n\r\n    this is a class comp, updating state with button click.\r\n    code from modules 2 and 3\r\n\r\n    To setState Mod 2/video 2-2-2017-06-13-77241-dev281x_2017 1080 Encoding Preset.mp4\r\n    state >  setSate with callb func.\r\n\r\n*/\r\nimport React from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nclass Test2 extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        /*   State   */\r\n        this.state = {item:'', active:'true', ListArr: [] }\r\n        this.handleItemChange = this.handleItemChange.bind(this)\r\n        this.AddItem = this.AddItem.bind(this)\r\n        }\r\n    \r\n      /* Add to do item to  ListArr  */  \r\n      AddItem(event) {\r\n        event.preventDefault()\r\n        \r\n        /*  create todo object from input  */\r\n        const todoObj= {item:this.state.item, active:this.state.active}\r\n        console.log(\"call func AddItem\")\r\n        console.log(todoObj)\r\n\r\n        /*   copy array from state, push todo obj to copy  */\r\n        let ArrayCopy=[]\r\n        ArrayCopy = Array.from(this.state.ListArr)\r\n        ArrayCopy.push(todoObj)\r\n        \r\n        /*  update state Array  */\r\n        this.setState( {ListArr: ArrayCopy} , () => {\r\n        console.log(\"state Arr after setState\")\r\n        console.log(this.state.ListArr)\r\n        })\r\n      }\r\n\r\n      /* this is a callback function */\r\n      handleItemChange(event){\r\n        this.setState( {item: event.target.value} , () => {\r\n\r\n        console.log(this.state.item)\r\n        })\r\n      }   \r\n    \r\n      render(){\r\n        return (\r\n\t\t<div> \r\n    <Container>\r\n\t\t<br/>\r\n\t\t<p> This is Test2 func, from Test2.js </p>\r\n\t\t<p> react is <b>complete</b> junk </p>\r\n    \r\n    {/* DISPLAY  Input field / Button  */}\r\n    <div>\r\n        <input type= 'text'\r\n              value= {this.state.item}\r\n              onChange= {this.handleItemChange}  />\r\n    </div>        \r\n\r\n     <div>             \r\n    <button onClick={this.AddItem}> Add Item </button> </div> <br/> <br/>\r\n\r\n\r\n    {/*  DISPLAY  ToDo List  */}\r\n    { List.map( (listElement, idx: number) => {\r\n                  return (\r\n                  <div>\r\n                  <Row>\r\n                    <Col style={{border:'1px dotted red', padding:'4px'}}> </Col>\r\n                    \r\n                    <Col style={{border:'1px dotted green', padding:'4px'}} > \r\n                    <li key={idx}>  {listElement} </li>\r\n                    </Col>\r\n                    \r\n                    <Col style={{border:'1px dotted red', padding:'4px'}}> </Col>\r\n                  </Row>   \r\n                  </div>\r\n                  )\r\n                  })\r\n                }\r\n\r\n\t\t</Container>\r\n\t\t</div>\r\n\t\t)\r\n    }\r\n}\r\nexport default Test2;\r\n"]},"metadata":{},"sourceType":"module"}