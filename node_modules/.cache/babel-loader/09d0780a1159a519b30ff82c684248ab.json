{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\ToDo.js\",\n    _s = $RefreshSig$();\n\n/*  ToDO.js  */\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  clickHandler() {\n    //increments the count of the state\n    this.setState((prevState, props) => {\n      return {\n        count: prevState.count + 1\n      };\n    });\n  }\n\n  render() {\n    //renders a button that displays the state count\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.clickHandler,\n      children: [\" \", this.state.count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nfunction ToDo(props) {\n  _s();\n\n  const [currentItem, setCurrentItem] = useState('');\n  const [List, setList] = useState([]);\n\n  const addTheItem = async () => {\n    setList(oldArray => [...oldArray, currentItem]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => {\n            setCurrentItem(event.currentTarget.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTheItem,\n          children: \" Add the Item \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 67\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 73\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), JSON.stringify(List), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 44\n      }, this), List.map((listElement, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                border: '1px dotted red',\n                padding: '4px'\n              },\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                border: '1px dotted green',\n                padding: '4px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"  \", listElement, \"  \"]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                border: '1px dotted red',\n                padding: '4px'\n              },\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"counter\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDo, \"ferzxAKCoFRRhyUZSDzWAIsoKTQ=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/ToDo.js"],"names":["React","useState","useEffect","Container","Row","Col","Button","Counter","Component","constructor","props","state","count","clickHandler","bind","setState","prevState","render","ToDo","currentItem","setCurrentItem","List","setList","addTheItem","oldArray","event","currentTarget","value","JSON","stringify","map","listElement","idx","border","padding"],"mappings":"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","sourcesContent":["/*  ToDO.js  */ \r\nimport React from 'react';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Counter extends React.Component{\r\n  constructor(props){\r\n      super(props)\r\n      this.state = {count:0}\r\n      this.clickHandler = this.clickHandler.bind(this)\r\n  }\r\n  \r\n  clickHandler(){\r\n    //increments the count of the state\r\n    this.setState((prevState,props) => {\r\n      return {count: prevState.count + 1}\r\n    })\r\n  }\r\n  \r\n  render(){\r\n      //renders a button that displays the state count\r\n      return <button onClick = {this.clickHandler}> {this.state.count} </button>\r\n  }\r\n}\r\n\r\n\r\nfunction ToDo(props) {\r\n\r\n    const [currentItem, setCurrentItem] = useState('') \r\n    const [List, setList] = useState([])  \r\n\r\n    const addTheItem = async () => {   \r\n        \r\n        setList(oldArray => [...oldArray, currentItem  ] )\r\n      \r\n      }\r\n    \r\n    return (\r\n        \r\n        <div>\r\n        <Container>\r\n        \r\n            <br/><br/>\r\n\r\n          {/* INPUT BOX, BUTTON */}\r\n          <div>   \r\n            <input type='text' onChange ={ (event: ChangeEvent<HTMLInputElement>) => {\r\n            setCurrentItem(event.currentTarget.value) }\r\n            } />\r\n                    \r\n            <button onClick={addTheItem}> Add the Item </button>  <br/> <br/>\r\n          </div> \r\n            \r\n            {JSON.stringify(List)}  <br/>  <br/>\r\n\r\n            \r\n            {/*   OUTPUT List  */}\r\n              \r\n              \r\n              \r\n              \r\n                { List.map((listElement, idx: number) => {\r\n                  return (\r\n                    \r\n                  \r\n                <div>\r\n                <Row>\r\n                    <Col style={{border:'1px dotted red', padding:'4px'}}> </Col>\r\n                    \r\n                    <Col style={{border:'1px dotted green', padding:'4px'}} > \r\n                    <li key={idx}>  {listElement}  </li>\r\n                    </Col>\r\n                    \r\n                    <Col style={{border:'1px dotted red', padding:'4px'}}> </Col>\r\n                </Row>    \r\n                </div>\r\n                               \r\n                  \r\n                  \r\n                  )\r\n                  })\r\n                }\r\n              \r\n        \r\n        </Container>\r\n\r\n        <counter />\r\n        </div>\r\n    \r\n    )\r\n  }\r\n  \r\n  export default ToDo;\r\n"]},"metadata":{},"sourceType":"module"}