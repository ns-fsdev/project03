{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\linux\\\\code\\\\fau\\\\projects\\\\project03\\\\src\\\\TestFunc.js\";\n\n/*  TestFunc.js  */\nimport React from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nfunction TestFunc(props) {\n  console.log(\"call TestFunc\");\n\n  if (props.setting === 'all') {\n    props.todoArr.map((elemitem, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", elemitem.item, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 24\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 18\n      }, this);\n    });\n  } else {\n    return 'no items';\n  }\n  /* 'If' does not work without 'Else' */\n\n}\n\n_c = TestFunc;\n;\nexport default TestFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestFunc\");","map":{"version":3,"sources":["D:/linux/code/fau/projects/project03/src/TestFunc.js"],"names":["React","propTypes","TestFunc","props","console","log","setting","todoArr","map","elemitem","index","item"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAEC,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAEA,MAAIF,KAAK,CAACG,OAAN,KAAgB,KAApB,EAA2B;AACvBH,IAAAA,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAmB,CAACC,QAAD,EAAUC,KAAV,KAAoB;AACvC,0BAAS;AAAA,qCAAM;AAAA,0BAAkBD,QAAQ,CAACE,IAA3B;AAAA,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACC,KAFD;AAGH,GAJD,MAKK;AAAE,WAAQ,UAAR;AAAqB;AAAI;;AAEnC;;KAVSR,Q;AAUT;AACD,eAAeA,QAAf","sourcesContent":["/*  TestFunc.js  */\r\n\r\nimport React from 'react';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\n function TestFunc(props) {\r\n    console.log(\"call TestFunc\");\r\n    \r\n    if (props.setting==='all') {\r\n        props.todoArr.map( (elemitem,index) => {\r\n        return ( <div> <li key={index}> {elemitem.item} </li> </div> ) \r\n        })\r\n    }\r\n    else { return ('no items') }    /* 'If' does not work without 'Else' */\r\n\r\n};\r\nexport default TestFunc;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}